"use strict";(self.webpackChunkfilestructure_template=self.webpackChunkfilestructure_template||[]).push([[707],{707:(s,t,a)=>{a.d(t,{addTask:()=>u,clearTasks:()=>d,deleteTask:()=>c,loadTask:()=>n,updateTask:()=>i});var e=a(644),r=a(405);a(959);async function u(s,t=!1){const a=e.j.currentUser;a&&await(0,r.gS)((0,r.rJ)(e.db,"users",a.uid,"tasks"),{text:s,checked:t,timestamp:(new Date).toISOString()})}async function n(){const s=e.j.currentUser;if(!s)return;return(await(0,r.GG)((0,r.rJ)(e.db,"users",s.uid,"tasks"))).docs.map(s=>({id:s.id,...s.data()}))}async function c(s){const t=e.j.currentUser;t&&await(0,r.kd)((0,r.H9)(e.db,"users",t.uid,"tasks",s))}async function i(s,t){const a=e.j.currentUser;a&&await(0,r.mZ)((0,r.H9)(e.db,"users",a.uid,"tasks",s),t)}async function d(){const s=e.j.currentUser;if(!s)return;const t=(0,r.rJ)(e.db,"users",s.uid,"tasks"),a=await(0,r.GG)(t),u=[];a.forEach(t=>{u.push((0,r.kd)((0,r.H9)(e.db,"users",s.uid,"tasks",t.id)))}),await Promise.all(u)}}}]);
//# sourceMappingURL=707.js.map