"use strict";(self.webpackChunkfilestructure_template=self.webpackChunkfilestructure_template||[]).push([[707],{707:(s,t,e)=>{e.d(t,{addTask:()=>u,clearTasks:()=>o,deleteTask:()=>i,loadTask:()=>c,resetPassword:()=>k,updateTask:()=>d});var a=e(644),r=e(405),n=e(959);async function u(s,t=!1){const e=a.j.currentUser;e&&await(0,r.gS)((0,r.rJ)(a.db,"users",e.uid,"tasks"),{text:s,checked:t,timestamp:(new Date).toISOString()})}async function c(){const s=a.j.currentUser;if(!s)return;return(await(0,r.GG)((0,r.rJ)(a.db,"users",s.uid,"tasks"))).docs.map(s=>({id:s.id,...s.data()}))}async function i(s){const t=a.j.currentUser;t&&await(0,r.kd)((0,r.H9)(a.db,"users",t.uid,"tasks",s))}async function d(s,t){const e=a.j.currentUser;e&&await(0,r.mZ)((0,r.H9)(a.db,"users",e.uid,"tasks",s),t)}async function o(){const s=a.j.currentUser;if(!s)return;const t=(0,r.rJ)(a.db,"users",s.uid,"tasks"),e=await(0,r.GG)(t),n=[];e.forEach(t=>{n.push((0,r.kd)((0,r.H9)(a.db,"users",s.uid,"tasks",t.id)))}),await Promise.all(n)}async function k(s){try{await(0,n.J1)(a.j,s),alert("Password reset email sent. Check your inbox.")}catch(s){alert("Error: "+s.message)}}}}]);
//# sourceMappingURL=707.js.map