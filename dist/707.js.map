{"version":3,"file":"707.js","mappings":"6OAWOA,eAAeC,EAAQC,EAAMC,GAAU,GAC5C,MAAMC,EAAO,IAAKC,YACbD,SACC,SAAO,QAAW,EAAAE,GAAI,QAASF,EAAKG,IAAK,SAAU,CACvDL,OACAC,UACAK,WAAW,IAAIC,MAAOC,eAE1B,CAIOV,eAAeW,IACpB,MAAMP,EAAO,IAAKC,YAClB,IAAKD,EAAM,OAGX,aAFuB,SAAQ,QAAW,EAAAE,GAAI,QAASF,EAAKG,IAAK,WAEjDK,KAAKC,IAAKC,IAAQ,CAChCC,GAAID,EAAIC,MACLD,EAAIE,SAEX,CAIOhB,eAAeiB,EAAWC,GAC/B,MAAMd,EAAO,IAAKC,YACbD,SAEC,SAAU,QAAI,EAAAE,GAAI,QAASF,EAAKG,IAAK,QAASW,GACtD,CAGOlB,eAAemB,EAAWD,EAAQF,GACvC,MAAMZ,EAAO,IAAKC,YACbD,SACC,SAAU,QAAI,EAAAE,GAAI,QAASF,EAAKG,IAAK,QAASW,GAASF,EAC/D,CAIOhB,eAAeoB,IACpB,MAAMhB,EAAO,IAAKC,YAClB,IAAKD,EAAM,OACX,MAAMiB,GAAW,QAAW,EAAAf,GAAI,QAASF,EAAKG,IAAK,SAC7Ce,QAAiB,QAAQD,GACzBE,EAAiB,GACvBD,EAASE,QAASC,IAChBF,EAAeG,MACb,SAAU,QAAI,EAAApB,GAAI,QAASF,EAAKG,IAAK,QAASkB,EAAQV,cAGpDY,QAAQC,IAAIL,EACpB,C","sources":["webpack://filestructure_template/./src/js/db.js"],"sourcesContent":["import { db, auth } from \"./firebase.js\";\r\nimport {\r\n  collection,\r\n  addDoc,\r\n  getDocs,\r\n  deleteDoc,\r\n  doc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\n//save a new task for current user\r\nexport async function addTask(text, checked = false) {\r\n  const user = auth.currentUser;\r\n  if (!user) return;\r\n  await addDoc(collection(db, \"users\", user.uid, \"tasks\"), {\r\n    text,\r\n    checked,\r\n    timestamp: new Date().toISOString(),\r\n  });\r\n}\r\n\r\n//load tasks from firestore db\r\n\r\nexport async function loadTask() {\r\n  const user = auth.currentUser;\r\n  if (!user) return;\r\n  const snapshot = await getDocs(collection(db, \"users\", user.uid, \"tasks\"));\r\n\r\n  return snapshot.docs.map((doc) => ({\r\n    id: doc.id,\r\n    ...doc.data(),\r\n  }));\r\n}\r\n\r\n//delete tasks from firstore db\r\n\r\nexport async function deleteTask(taskID) {\r\n  const user = auth.currentUser;\r\n  if (!user) return;\r\n\r\n  await deleteDoc(doc(db, \"users\", user.uid, \"tasks\", taskID));\r\n}\r\n\r\n//update task\r\nexport async function updateTask(taskID, data) {\r\n  const user = auth.currentUser;\r\n  if (!user) return;\r\n  await updateDoc(doc(db, \"users\", user.uid, \"tasks\", taskID), data);\r\n}\r\n\r\n//Clear all tasks\r\n\r\nexport async function clearTasks() {\r\n  const user = auth.currentUser;\r\n  if (!user) return;\r\n  const tasksCol = collection(db, \"users\", user.uid, \"tasks\");\r\n  const snapshot = await getDocs(tasksCol);\r\n  const deletePromises = [];\r\n  snapshot.forEach((taskDoc) => {\r\n    deletePromises.push(\r\n      deleteDoc(doc(db, \"users\", user.uid, \"tasks\", taskDoc.id))\r\n    );\r\n  });\r\n  await Promise.all(deletePromises);\r\n}\r\n"],"names":["async","addTask","text","checked","user","currentUser","db","uid","timestamp","Date","toISOString","loadTask","docs","map","doc","id","data","deleteTask","taskID","updateTask","clearTasks","tasksCol","snapshot","deletePromises","forEach","taskDoc","push","Promise","all"],"sourceRoot":""}