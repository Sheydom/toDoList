{"version":3,"file":"main.js","mappings":"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","sources":["webpack://filestructure_template/./src/js/script.js"],"sourcesContent":["// const { task } = require(\"gulp\");\r\n// import \"../scss/base/styles.css\"; // or .scss for webpack\r\n\r\nconst main = document.querySelector(\"main\");\r\nconst addButton = document.querySelector(\".addTask__button\");\r\nconst taskInput = document.querySelector(\".addTask__input\");\r\nconst taskList = document.querySelector(\".tasklist\");\r\n\r\nconst clearAllButton = document.querySelector(\".clearAll__button\");\r\nconst statusCounter = document.querySelector(\".status__counter\");\r\nconst example = document.querySelector(\".tasklist__task\");\r\nconst slider = document.querySelector(\".reminderSlider__sliderInput\");\r\nconst rangeValue = document.querySelector(\".rangeValue\");\r\nlet sliderValue = slider.value;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  loadTasks();\r\n  counterTasks();\r\n  hideExample();\r\n  loadRangeValue();\r\n  console.log(\"slidervalue\", sliderValue);\r\n  warnOldest();\r\n  // setInterval(warnOldest, 1000); // test slider value in seconds\r\n  setInterval(warnOldest, 1000 * 60 * 60 * 12); // Check every 12 hours\r\n});\r\n\r\nslider.addEventListener(\"input\", () => {\r\n  sliderValue = slider.value;\r\n  rangeValue.innerText =\r\n    sliderValue > 1 ? `in ${sliderValue} days` : `in ${sliderValue} day`;\r\n  saveRangeValue(sliderValue);\r\n  warnOldest();\r\n});\r\n\r\nfunction saveRangeValue(sliderValue) {\r\n  localStorage.setItem(\"sliderValue\", sliderValue);\r\n}\r\n\r\nfunction loadRangeValue() {\r\n  const savedValue = localStorage.getItem(\"sliderValue\");\r\n\r\n  if (savedValue) {\r\n    slider.value = savedValue;\r\n    rangeValue.innerText =\r\n      savedValue > 1 ? `in ${savedValue} days` : `in ${savedValue} day`;\r\n    // rangeValue.innerText = `in ${savedValue} days`;\r\n    sliderValue = parseInt(savedValue, 10);\r\n  }\r\n}\r\n\r\n// function to add tasks\r\nfunction addTask() {\r\n  const taskText = taskInput.value.trim();\r\n  if (taskText === \"\") {\r\n    alert(\"Please enter a task.\");\r\n    return;\r\n  }\r\n  const newTask = document.createElement(\"div\");\r\n  newTask.classList.add(\"tasklist__newTask\");\r\n  const timeStamp = new Date().toISOString();\r\n  const displayDate = new Date(timeStamp).toLocaleDateString();\r\n  newTask.innerHTML = `\r\n  <div class=\"tasklist__all\">\r\n    <input type=\"checkbox\" name=\"task\" class=\"tasklist__checkbox\" />\r\n    <p>${taskText}</p>\r\n    \r\n   <span ><span class=\"tasklist__timestamp\">${displayDate}</span><i class=\"ri-edit-2-line tasklist__edit\"></i></span></div>\r\n         <div class=\"delete\">     <span class=\"tasklist__delete\"> <i class=\"ri-delete-bin-6-line \"></i></span></div>\r\n    `;\r\n  taskList.appendChild(newTask);\r\n  saveTaskToLocalStorage(taskText);\r\n  taskInput.value = \"\";\r\n  counterTasks();\r\n}\r\n\r\n// Eventlistener to add task to the tasklist\r\naddButton.addEventListener(\"click\", addTask);\r\ntaskInput.addEventListener(\"keypress\", (event) => {\r\n  if (event.key === \"Enter\" && taskInput.value.trim() !== \"\") {\r\n    addTask();\r\n  } else if (event.key === \"Enter\" && taskInput.value.trim() === \"\") {\r\n    alert(\"Please enter a task.\");\r\n  }\r\n});\r\n\r\n//event listener to edit task\r\ntaskList.addEventListener(\"click\", (event) => {\r\n  if (event.target.closest(\".tasklist__edit\")) {\r\n    // const task = event.target.closest(\".tasklist__task\");\r\n    const newTask = event.target.closest(\".tasklist__newTask\");\r\n    // const taskText = task.querySelector(\"p\").textContent;\r\n    const newTaskText = newTask.querySelector(\"p\").textContent;\r\n\r\n    //create input field to edit task\r\n    const editInputField = document.createElement(\"input\");\r\n    editInputField.type = \"text\";\r\n    editInputField.value = newTaskText;\r\n    editInputField.classList.add(\"edit__input\");\r\n\r\n    // replace p with inputfield\r\n    // const paragraph = task.querySelector(\"p\");\r\n    const newParagraph = newTask.querySelector(\"p\");\r\n    let tasks = JSON.parse(localStorage.getItem(\"tasks\") || []);\r\n    const taskIndex = tasks.findIndex(\r\n      (task) =>\r\n        // task.text === paragraph.textContent ||\r\n        task.text === newParagraph.textContent\r\n    );\r\n    // paragraph.replaceWith(editInputField);\r\n    newParagraph.replaceWith(editInputField);\r\n    editInputField.focus();\r\n    // save edited task when user press enter\r\n    editInputField.addEventListener(\"keypress\", (event) => {\r\n      if (event.key === \"Enter\" && editInputField.value.trim() !== \"\") {\r\n        const newTaskText = editInputField.value.trim();\r\n        newParagraph.textContent = newTaskText;\r\n\r\n        editInputField.replaceWith(newParagraph);\r\n\r\n        if (taskIndex !== -1) {\r\n          tasks[taskIndex].text = newParagraph.textContent;\r\n          localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n        }\r\n      } else if (event.key === \"Enter\" && editInputField.value.trim() == \"\") {\r\n        editInputField.replaceWith(newParagraph);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n//delete function to remove task from localstorage\r\nfunction deleteTask(taskText) {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const taskIndex = tasks.findIndex((task) => task.text === taskText);\r\n\r\n  if (taskIndex !== -1) {\r\n    tasks.splice(taskIndex, 1);\r\n  }\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  counterTasks();\r\n}\r\n\r\n//event listener to delete Tasks from tasklist\r\ntaskList.addEventListener(\"click\", (event) => {\r\n  if (event.target.closest(\".tasklist__delete\")) {\r\n    const task = event.target.closest(\".tasklist__newTask\");\r\n    const taskText = task.querySelector(\"p\").textContent;\r\n    deleteTask(taskText);\r\n    task.remove();\r\n    counterTasks();\r\n  }\r\n});\r\n\r\n// save tasks to localstorage\r\nfunction saveTaskToLocalStorage(taskText) {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  tasks.push({\r\n    text: taskText,\r\n    checked: false,\r\n    timestamp: new Date().toISOString(),\r\n  });\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n}\r\n\r\n// update checked status\r\nfunction updateCheckedStatus(taskText, isChecked) {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const taskIndex = tasks.findIndex((task) => task.text === taskText);\r\n  if (taskIndex !== -1) {\r\n    tasks[taskIndex].checked = isChecked;\r\n  }\r\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n}\r\n\r\n//tasklist eventlistener for change of checkbox\r\ntaskList.addEventListener(\"change\", (event) => {\r\n  if (event.target.classList.contains(\"tasklist__checkbox\")) {\r\n    const task = event.target.closest(\".tasklist__newTask\");\r\n    const taskText = task.querySelector(\"p\").textContent;\r\n    updateCheckedStatus(taskText, event.target.checked);\r\n    counterTasks();\r\n    warnOldest();\r\n  }\r\n});\r\n\r\n// function to load tasks from localstorage\r\nfunction loadTasks() {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  // tasks.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n  tasks.forEach((task) => {\r\n    const newTask = document.createElement(\"div\");\r\n    const timeStamp = task.timestamp;\r\n    const displayDate = new Date(timeStamp).toLocaleDateString();\r\n    // newTask.classList.add(\"tasklist__task\");\r\n    newTask.classList.add(\"tasklist__newTask\");\r\n    newTask.innerHTML = `\r\n  <div class=\"tasklist__all\">\r\n    <input type=\"checkbox\" name=\"task\" class=\"tasklist__checkbox\" ${task.checked ? \"checked\" : \"\"} />\r\n    <p>${task.text}</p>\r\n    \r\n    <span ><span class=\"tasklist__timestamp\">${displayDate}</span><i class=\"ri-edit-2-line tasklist__edit\"></i></span></div>\r\n         <div class=\"delete\">     <span class=\"tasklist__delete\"> <i class=\"ri-delete-bin-6-line \"></i></span></div>\r\n         \r\n\r\n    `;\r\n    taskList.appendChild(newTask);\r\n  });\r\n}\r\n// clear all tasks function\r\nfunction clearAllTasks() {\r\n  localStorage.removeItem(\"tasks\");\r\n  // Remove all task elements\r\n  document\r\n    .querySelectorAll(\".tasklist__newTask\")\r\n    .forEach((task) => task.remove());\r\n  counterTasks();\r\n  hideExample();\r\n}\r\n\r\nclearAllButton.addEventListener(\"click\", () => {\r\n  clearAllTasks();\r\n  counterTasks();\r\n});\r\n\r\n// function to count tasks\r\nfunction counterTasks() {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const counter = tasks.length;\r\n  const checkCounter = document.querySelectorAll(\".tasklist__checkbox\");\r\n  const newtask = document.querySelectorAll(\".tasklist__newTask\");\r\n\r\n  checkCounter.forEach((checkbox) => {\r\n    checkbox.addEventListener(\"click\", counterTasks);\r\n  });\r\n\r\n  const checkedTasks = Array.from(checkCounter).filter(\r\n    (checkbox) => checkbox.checked\r\n  ).length;\r\n  statusCounter.innerText = `${checkedTasks}/${counter}`;\r\n  hideExample();\r\n\r\n  if (counter == checkedTasks && checkedTasks > 0) {\r\n    statusCounter.classList.add(\"allChecked\");\r\n    main.classList.add(\"mainChecked\");\r\n\r\n    newtask.forEach((task) => {\r\n      const inner = task.querySelector(\".tasklist__all\");\r\n      const innerP = task.querySelector(\"p\");\r\n      inner.classList.remove(\"tasklist__oldestTask\");\r\n      inner.classList.add(\"tasklist__checkedTask\");\r\n      innerP.classList.remove(\"tasklist__oldestTask\");\r\n      innerP.classList.add(\"tasklist__checked\");\r\n    });\r\n  } else {\r\n    statusCounter.classList.remove(\"allChecked\");\r\n    main.classList.remove(\"mainChecked\");\r\n    newtask.forEach((task) => {\r\n      const inner = task.querySelector(\".tasklist__all\");\r\n      const innerP = task.querySelector(\"p\");\r\n      innerP.classList.remove(\"tasklist__checked\");\r\n      inner.classList.remove(\"tasklist__checkedTask\");\r\n    });\r\n  }\r\n\r\n  if (checkedTasks > 0) {\r\n    checkCounter.forEach((checkbox) => {\r\n      if (checkbox.checked) {\r\n        const task = checkbox.closest(\".tasklist__newTask\");\r\n        const inner = task.querySelector(\".tasklist__all\");\r\n        const innerP = task.querySelector(\"p\");\r\n        inner.classList.remove(\"tasklist__oldestTask\");\r\n        inner.classList.add(\"tasklist__checkedTask\");\r\n        innerP.classList.remove(\"tasklist__oldestTask\");\r\n        innerP.classList.add(\"tasklist__checked\");\r\n      }\r\n    });\r\n  } else {\r\n    statusCounter.classList.remove(\"allChecked\");\r\n    main.classList.remove(\"mainChecked\");\r\n    newtask.forEach((task) => {\r\n      const inner = task.querySelector(\".tasklist__all\");\r\n      const innerP = task.querySelector(\"p\");\r\n      innerP.classList.remove(\"tasklist__checked\");\r\n      inner.classList.remove(\"tasklist__checkedTask\");\r\n    });\r\n  }\r\n}\r\n\r\nfunction hideExample() {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  const tasksLength = tasks.length;\r\n  if (tasksLength === 0) {\r\n    example.classList.add(\"show\");\r\n  } else {\r\n    example.classList.remove(\"show\");\r\n  }\r\n}\r\n\r\nfunction warnOldest() {\r\n  let tasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  if (tasks.length > 0) {\r\n    tasks.forEach((task) => {\r\n      const today = new Date();\r\n      const taskDate = new Date(task.timestamp);\r\n      const taskDiffTime = Math.abs(today - taskDate);\r\n      const taskDiffDays = Math.floor(taskDiffTime / (1000 * 60 * 60 * 24)); //floor better than ceil because it rounds up i needs to be a full day 4,1 = 4 and not 5\r\n      console.log(\"taskDiffDays\", taskDiffDays);\r\n      console.log(\"sliderValue\", sliderValue);\r\n      const taskElement = Array.from(document.querySelectorAll(\"p\")).find(\r\n        (p) => task.text === p.textContent\r\n      );\r\n      if (taskDiffDays >= sliderValue) {\r\n        if (taskElement) {\r\n          taskElement.classList.add(\"tasklist__oldestTask\");\r\n          taskElement\r\n            .closest(\".tasklist__all\")\r\n            .classList.add(\"tasklist__oldestTask\");\r\n        }\r\n      } else {\r\n        taskElement.classList.remove(\"tasklist__oldestTask\");\r\n        taskElement\r\n          .closest(\".tasklist__all\")\r\n          .classList.remove(\"tasklist__oldestTask\");\r\n      }\r\n    });\r\n  }\r\n}\r\n"],"names":["main","document","querySelector","addButton","taskInput","taskList","clearAllButton","statusCounter","example","slider","rangeValue","sliderValue","value","addTask","taskText","trim","alert","newTask","createElement","classList","add","timeStamp","Date","toISOString","displayDate","toLocaleDateString","innerHTML","appendChild","tasks","JSON","parse","localStorage","getItem","push","text","checked","timestamp","setItem","stringify","saveTaskToLocalStorage","counterTasks","counter","length","checkCounter","querySelectorAll","newtask","forEach","checkbox","addEventListener","checkedTasks","Array","from","filter","innerText","hideExample","task","inner","innerP","remove","closest","warnOldest","today","taskDate","taskDiffTime","Math","abs","taskDiffDays","floor","console","log","taskElement","find","p","textContent","savedValue","parseInt","loadRangeValue","setInterval","saveRangeValue","event","key","target","newTaskText","editInputField","type","newParagraph","taskIndex","findIndex","replaceWith","focus","splice","deleteTask","contains","isChecked","updateCheckedStatus","removeItem"],"sourceRoot":""}